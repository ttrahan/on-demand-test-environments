jobs:

#---------------------------------------------------------------#
#------------------- BUILD/CI with SHIPPABLE CI ----------------#
#---------------------------------------------------------------#

 # PACKAGE and push app front-end and back-end code into docker hub

  - name: vote_be_runCI
    type: runCI
    steps:
      - OUT: vote_be_odte

  - name: vote_fe_runCI
    type: runCI
    steps:
      - OUT: vote_fe_odte

# DEFINE app micro service
  - name: create_app_man_odte
    type: manifest
    steps:
      - IN: vote_fe_odte
      - IN: vote_fe_params_odte
        applyTo:
          - vote_fe_odte
      - IN: vote_fe_options_odte
        applyTo:
          - vote_fe_odte
      - IN: vote_be_odte
      - IN: vote_be_options_odte
        applyTo:
          - vote_be_odte

#---------------------------------------------------------------#
#-------------- TEST Infra Prov Using ANsible  -----------------#
#---------------------------------------------------------------#

# PROV Test VPC with Ansible
  - name: prov_test_vpc_odte
    type: runSh
    steps:
      - IN: create_app_man_odte
      - IN: aws_cli_config_odte
        switch: off
      - IN: aws_creds_odte
        switch: off
      - IN: aws_pem_odte
        switch: off
      - IN: ami_sec_approved_odte
        switch: off
      - IN: scripts_repo_odte
        switch: off
      - IN: test_conf_odte
        switch: off
      - IN: test_vpc_conf_odte
        switch: off
      - TASK:
        - script: echo $SCRIPTS_REPO_ODTE_STATE
        - script: ls $SCRIPTS_REPO_ODTE_STATE
        - script: shipctl replace
            $SCRIPTS_REPO_ODTE_STATE/infra/provision-ecs-ansible/ansible.cfg
            $SCRIPTS_REPO_ODTE_STATE/infra/provision-ecs-ansible/group_vars/ecs-cluster-vars.yml
        - script: sudo pip install boto3
        - script: |
            cd $SCRIPTS_REPO_ODTE_STATE/infra/provision-ecs-ansible
            ansible-playbook -v ansible-ecs-provision.yml
      - OUT: test_env_ecs_odte
        overwrite: true
      - OUT: test_info_odte
    on_success:
      - script: echo "SUCCESS"
    on_failure:
      - script: echo "FAILURE"

##---------------------------------------------------------------#
##-------------------- App Release Automation -------------------#
##---------------------------------------------------------------#

# DEPLOY to TEST environment
  - name: deploy_app_test_odte
    type: deploy
    method: replace
    steps:
      - IN: create_app_man_odte
        switch: off
      - IN: prov_test_vpc_odte
      - IN: test_env_ecs_odte
        switch: off
      - TASK: managed

# RUN System Integration Testing
  - name: sit_odte
    type: runSh
    steps:
      - IN: sit_repo
        switch: off
      - IN: deploy_app_test_odte
      - IN: sit_params
      - TASK:
        - script: IN/sit_repo/gitRepo/test.sh sit_params
    on_success:
      - script: touch /build/state/success.txt
    on_failure:
      - script: touch /build/state/failure.txt

#---------------------------------------------------------------#
#----------------------- Deprov Test Infra----------------------#
#---------------------------------------------------------------#

# DEPROV TEST Infra with Ansible
  - name: deprov_test_infra_odte
    type: runSh
    steps:
      - IN: sit_odte
      - IN: aws_cli_config_odte
        switch: off
      - IN: test_vpc_conf_odte
        switch: off
      - IN: test_conf_odte
        switch: off
      - IN: test_info_odte
        switch: off
      - IN: aws_creds_odte
        switch: off
      - IN: aws_pem_odte
        switch: off
      - IN: scripts_repo_odte
        switch: off
      - IN: ami_sec_approved_odte
        switch: off
      - TASK:
        - script: echo $SCRIPTS_REPO_ODTE_STATE
        - script: ls $SCRIPTS_REPO_ODTE_STATE
        - script: shipctl replace
            $SCRIPTS_REPO_ODTE_STATE/infra/provision-ecs-ansible/ansible.cfg
            $SCRIPTS_REPO_ODTE_STATE/infra/provision-ecs-ansible/group_vars/ecs-cluster-vars.yml
        - script: sudo pip install boto3
        - script: |
            cd $SCRIPTS_REPO_ODTE_STATE/infra/provision-ecs-ansible
            ansible-playbook -v ansible-ecs-terminate.yml
    on_success:
      - script: echo "SUCCESS"
    on_failure:
      - script: echo "FAILURE"
